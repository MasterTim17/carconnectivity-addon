name: Build and Push Docker Images

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Read build.yaml configurations
        id: config
        run: |
          ARCHS=$(yq eval -o=json '.build.arch' build.yaml)
          BUILD_VARS=$(yq eval -o=json '.build.args' build.yaml)
          VERSION=$(yq eval '.version' build.yaml)
          echo "::set-output name=architectures::$ARCHS"
          echo "::set-output name=build_vars::$BUILD_VARS"
          echo "::set-output name=version::$VERSION"

      - name: Build and push Docker images
        run: |
          DOCKER_REPO="${{ secrets.DOCKERHUB_USERNAME }}/carconnectivity-addon"
          ARCHS=${{ steps.config.outputs.architectures }}
          BUILD_VARS=${{ steps.config.outputs.build_args }}
          VERSION=${{ steps.config.outputs.version }}

          for ARCH in $(echo $ARCHS | jq -r '.[]'); do
            BASE_IMAGE=$(echo $BUILD_VARS | jq -r --arg ARCH $ARCH '.[$ARCH]')
            
            echo "Building for architecture: $ARCH with base image $BASE_IMAGE"
            
            docker buildx build \
              --platform linux/$ARCH \
              --build-arg BUILD_FROM=$BASE_IMAGE \
              --tag $DOCKER_REPO:$VERSION-$ARCH \
              --tag $DOCKER_REPO:latest \
              --push .
